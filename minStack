import java.util.*;

public class minStack {
    public static class MinStack {
        Stack<Integer> st = new Stack<>();
        int min = -1;

        public MinStack() {

        }

        public void push(int val) {
            if (st.isEmpty()) {
                st.push(val);
                min = val;
            } else if (val > min) {
                st.push(val);
            } else {
                st.push(2*val - min);
                min = val;
            }
        }

        public void pop() {
            if (st.peek() > min) st.pop();
            else {
                min = 2*min - st.peek();
                st.pop();
            }
        }

        public int top() {
            if (st.peek() > min) return st.peek();
            return min;
        }

        public int getMin() {
//            System.out.println(st);
            return min;
        }

    }

    /**
     * Your MinStack object will be instantiated and called as such:
     * MinStack obj = new MinStack();
     * obj.push(val);
     * obj.pop();
     * int param_3 = obj.top();
     * int param_4 = obj.getMin();
     */

    public static void main(String[] args) {
        MinStack st = new MinStack();
        st.push(6);
        st.push(-9);
        st.push(5);
        st.push(4);
        st.push(8);
        st.push(3);
        st.push(4);
//        st.pop();
        System.out.println(st.top());
        st.pop();
        System.out.println(st.top());
        st.pop();
       System.out.println(st.top());
        st.pop();
         System.out.println(st.top());
        st.pop();
         System.out.println(st.top());
        st.pop();
       System.out.println(st.top());
//        st.pop();

//        System.out.println(st.top());
//        System.out.println(st.getMin());
//        System.out.println(st.top());
    }


}
